---
services:
#comment out any services you don't plan to use


# jellyfin = TV & Movie content server, streams content to your clients
  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ${MOVIES_DATA}:/data/movies
      - ${TV_SHOWS_DATA}:/data/tvshows
      - ${JELLYFIN_CONFIG}:/config
    ports:
      - ${JELLY_PORT:-8096}:8096
    restart: unless-stopped

# jellyseerr = media requests, you & other users can add movies/tv to radarr/sonarr 
# from a more user friendly interface that promotes content discovery
    jellyseerr:
       image: fallenbagel/jellyseerr:latest
       container_name: jellyseerr
       environment:
            - LOG_LEVEL=debug
            - TZ=${TIME_ZONE}
       ports:
            - ${JELLYSEER_PORT:-5055}:5055
       volumes:
            - ${JELLYSEER_CONFIG}:/app/config
       restart: unless-stopped

# qbittorent = torrent downloads
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
      - WEBUI_PORT=8080
    volumes:
      - ${QBITTORENT_CONFIG}:/config
      - ${DOWNLOADS_DATA}:/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

# Sonarr = TV show manager
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${TV_SHOWS_DATA}:/tv
      - ${DOWNLOADS_DATA}:/downloads
      - ${SONARR_CONFIG}:/config
    ports:
      - ${SONARR_PORT:-8989}:8989
    restart: unless-stopped

# Radarr = movie manager
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${MOVIES_DATA}:/movies
      - ${DOWNLOADS_DATA}:/downloads
      - ${RADARR_CONFIG}:/config
    ports:
      - ${RADARR_PORT:-7878}:7878
    restart: unless-stopped

# Lidarr = music manager
  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${MUSIC_DATA}:/music
      - ${DOWNLOADS_DATA}:/downloads
      - ${LIDARR_CONFIG}:/config
    ports:
      - ${LIDARR_PORT:-8686}:8686
    restart: unless-stopped


# Prowlarr = torrent indexer. Sonarr/Radarr/Lidarr etc use Prowlarr as a source to search for torrents to add to qbittorent
  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${PROWLARR_CONFIG}:/config
    ports:
      - ${PROWLARR_PORT:-9696}:9696
    restart: unless-stopped

# uncomment lines below to deploy with docker-compose    
#env_file:
#  - media.env